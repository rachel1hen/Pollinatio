name: BARK Audio Generation

on:
  workflow_dispatch:
    inputs:
      chapter_number:
        description: 'Chapter number to process'
        required: false
        default: ''
        
permissions:
  contents: write
  
jobs:
  setup:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
        
        - name: Free up disk space
          run: |
            sudo apt-get clean
            sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc \
              /usr/local/share/boost /usr/local/share/chromium /usr/share/swift \
              /usr/local/graalvm /opt/hostedtoolcache/CodeQL
            docker system prune -af || true
            sudo rm -rf /var/lib/mysql /var/lib/postgresql
            sudo rm -rf /tmp/*
            sudo rm -rf $HOME/.cargo
            sudo rm -rf $HOME/.gem
            sudo rm -rf $HOME/.rustup
            sudo rm -rf $HOME/.nvm
            sudo rm -rf $HOME/.npm
            sudo rm -rf $HOME/.gradle
            sudo rm -rf $HOME/.cache
            sudo rm -rf /home/runner/.cache
            
        - name: Remove Cache
          run: |
              rm -rf /home/runner/.cache/huggingface/*
  
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.11"
  
        - name: Install Python Dependencies
          run: |
            pip install -r requirements.txt
  
        - name: Install Bark & preload model
          run: |
            python -c "from bark import preload_models; preload_models()"

        - name: Print Bark model folders
          run: |
              echo "Bark cache (~/.cache/suno):"
              ls -R ~/.cache/suno || echo "No Bark folder found"
          
              echo "Huggingface cache (~/.cache/huggingface):"
              ls -R ~/.cache/huggingface || echo "No Hugging Face models found"
              
        - name: Upload Bark model files
          uses: actions/upload-artifact@v4
          with:
            name: bark-models
            path: /home/runner/.cache/suno/bark_v0
            
  generate_audio:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chunk: [0, 1, 2] 

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Free up disk space
        run: |
              sudo apt-get clean
              sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc \
                /usr/local/share/boost /usr/local/share/chromium /usr/share/swift \
                /usr/local/graalvm /opt/hostedtoolcache/CodeQL
              docker system prune -af || true
              sudo rm -rf /var/lib/mysql /var/lib/postgresql
              sudo rm -rf $HOME/.cargo
              sudo rm -rf $HOME/.gem
              sudo rm -rf $HOME/.rustup
              sudo rm -rf $HOME/.nvm
              sudo rm -rf $HOME/.npm
              sudo rm -rf $HOME/.gradle

  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.11"
  
  
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
  
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pydub deep-translator python-telegram-bot==20.6
      
      - name: Download Bark model files
        uses: actions/download-artifact@v4
        with:
          name: bark-models
          path: /home/runner/.cache/suno/bark_v0
          
      - name: Install Python Dependencies
        run: |
            pip install -r requirements.txt

      - name: Clean text for audio generation
        run: |
          python scripts/clean_data.py "${{ github.event.inputs.chapter_number }}"

      - name: Run audio generator
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          python scripts/bark_audio_gen.py "${{ github.event.inputs.chapter_number }}"
      
      - name: Commit updated processed list
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add audio_done.txt
          git commit -m "Update processed_audio list"
          git push
          
